<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 读取jdbc.properties文件的内容 -->
	<!-- 
		Spring容器会依据location指定的路径读取
		配置文件的内容，然后将这些内容添加到
		Properties对象里面。
	 -->
	<util:properties id="jdbc" 
	location="classpath:jdbc.properties"/>
	
	<!-- 配置数据库连接池 -->
	<!-- 
		destroy-method用来指定销毁方法。
		注：
			当Spring容器销毁bean实例之前，会调用
			该实例的销毁方法。
			close方法的作用：将连接池中的所有连接
			关闭。
			c3p0 
	 -->
	<bean id="ds" 
	class="org.apache.commons.dbcp.BasicDataSource"
	destroy-method="close">
		<property name="driverClassName"
		value="#{jdbc.driver}"/>
		<property name="url"
		value="#{jdbc.url}"/>
		<property name="username"
		value="#{jdbc.user}"/>
		<property name="password"
		value="#{jdbc.password}"/>
	</bean>

	<!-- 配置SqlSessionFactoryBean -->
	<!-- 
		用来代替mybaties的配置文件
		所以这里面需要有两项配置
		1项是连接池的配置
		1项是映射文件的配置
	 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="ds"/>
		<!-- 注入映射文件的位置 -->
		<property name="mapperLocations" value="classpath:entity/*.xml"/>
	</bean>
	
	<!-- 配置MapperScannerConfigurer -->
	<!-- 
		该bean会扫描指定的包及其子包下面的所有的
		Mapper映射器（即符合映射文件要求的接口）
		然后调用SqlSession的getMapper方法，并且将该方法
		的返回值（即实现了接口要求的对象）添加到Spring容器里面。
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入要扫描的包名 -->
		<property name="basePackage" value="mike.study.dao"></property>
	</bean>
	
				
</beans>



